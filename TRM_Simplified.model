
/**
  The macro "TRM_Simplified" holds the definition for the graphical flowchart of this model,
  with steps and links connecting steps.
**/
Macro "TRM_Simplified" (Args)
Body:
    // model = FlowChart( { StartNodes } , { EndNodes } , Description)
    model = FlowChart({"Copy Files"},{"Converged"},)
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Attraction",,,)
    FlowChartNode(model,"Calculate Accessibility",,,)
    FlowChartNode(model,"Skimming",,,)
    FlowChartNode(model,"Trip Generation",,,)
    FlowChartNode(model,"Trip Distribution",,,)
    FlowChartNode(model,"Mode Choice",,,)
    FlowChartNode(model,"Time of Day",,,)
    FlowChartNode(model,"Directionality",,,)
    FlowChartNode(model,"Vehicle Trips",,,)
    FlowChartNode(model,"Assignment",,,)
    FlowChartNode(model,"Check Convergence",,,)
    FlowChartNode(model,"Converged",,,)
    FlowChartNode(model,"Copy Files",,,)
    FlowChartNode(model,"Build Networks",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Skimming","Calculate Accessibility",True,,)
    FlowChartLink(model,"Trip Distribution","Mode Choice",True,,)
    FlowChartLink(model,"Mode Choice","Time of Day",True,,)
    FlowChartLink(model,"Time of Day","Directionality",True,,)
    FlowChartLink(model,"Directionality","Vehicle Trips",True,,)
    FlowChartLink(model,"Vehicle Trips","Assignment",True,,)
    FlowChartLink(model,"Assignment","Check Convergence",True,,)
    FlowChartLink(model,"Calculate Accessibility","Trip Generation",True,,)
    FlowChartLink(model,"Trip Generation","Trip Distribution",True,,)
    FlowChartLink(model,"Check Convergence","Build Networks",2,,1)
    FlowChartLink(model,"Check Convergence","Converged",True,,)
    FlowChartLink(model,"Copy Files","Attraction",True,,)
    FlowChartLink(model,"Attraction","Build Networks",True,,)
    FlowChartLink(model,"Build Networks","Skimming",True,,)
    Return(model)
EndMacro


Macro "Build Road Network" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", { /* "Macro Name 1", ..., "Macro Name n" */ }}
    }
EndMacro


Macro "Build Drive Network" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Build Drive Network"}}
    }
Data:
    In({ Args.[Drive Filter] })
    In({ Args.[Output Folder] })
    In({ Args.[Road Line Layer] })
EndMacro


Macro "Build Transit Networks" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Build Transit Networks"}}
    }
Data:
    In({ Args.[Bike Speed MPH] })
    In({ Args.[Bus Speed Table] })
    In({ Args.[Output Folder] })
    In({ Args.[Road Line Layer] })
    In({ Args.[Transit Route System] })
    In({ Args.[Walk Speed MPH] })
EndMacro


Macro "Write Additional Outputs" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Write Additional Outputs"}}
    }
Data:
    In({ Args.[Drive Filter] })
    In({ Args.[Output Folder] })
    In({ Args.[Road Line Layer] })
    In({ Args.[Transit Route System] })
EndMacro


Macro "Drive Skims" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Calculate All Drive Skims"}}
    }
Data:
    In({ Args.[Output Folder] })
    In({ Args.[Road Line Layer] })
EndMacro


Macro "Transit Skims" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Calculate Transit Skims"}},
        {"Text", "Transit Skims"}
    }
Data:
    In({ Args.[Output Folder] })
    In({ Args.[Transit Route System] })
EndMacro


Macro "Calculate Accessibility" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Compute Accessibility"}}
    }
Data:
    In({ Args.[Cumulative Opportunity Cutoff Minutes] })
    In({ Args.[Output Folder] })
    In({ Args.[TAZ File] })
EndMacro


Macro "Build Nonmotorized Networks" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Build Nonmotorized Networks"}}
    }
Data:
    In({ Args.[Output Folder] })
    In({ Args.[Road Line Layer] })
EndMacro


Macro "Nonmotorized Skims" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Calculate Nonmotorized Skims"}}
    }
Data:
    In({ Args.[Output Folder] })
    In({ Args.[Road Line Layer] })
EndMacro


Macro "Skimming" (Args,Result)
    Attributes = {
        {"Description", "Stage 1"}
    }
Data:
    In({ Args.[Output Folder] })
    In({ Args.[Road Line Layer] })
Body:
    // model = FlowChart( { StartNodes } , { EndNodes } , Description)
    model = FlowChart({"Drive Skims"},{"Nonmotorized Skims"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Drive Skims",,,)
    FlowChartNode(model,"Transit Skims",,,)
    FlowChartNode(model,"Nonmotorized Skims",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Drive Skims","Transit Skims",True,,)
    FlowChartLink(model,"Transit Skims","Nonmotorized Skims",True,,)
    Return(model)
EndMacro


Macro "Production" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Trip Production"}}
    }
Data:
    In({ Args.[Model Folder] })
    In({ Args.[Output Folder] })
    In({ Args.[TAZ Segment Counts] })
EndMacro


Macro "Attraction" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Trip Attraction"}}
    }
Data:
    In({ Args.[Output Folder] })
    In({ Args.[TAZ File] })
EndMacro


Macro "Calibrate and Balance" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Calibrate and Balance"}}
    }
Data:
    In({ Args.[HBO Calibration] })
    In({ Args.[HBW Calibration] })
    In({ Args.[NHB Calibration] })
    In({ Args.[Output Folder] })
EndMacro


Macro "Trip Generation" (Args,Result)
    Attributes = {
        {"Description", "Stage 1"}
    }
Data:
    In({ Args.[Model Folder] })
    In({ Args.[Output Folder] })
    In({ Args.[TAZ Segment Counts] })
Body:
    // model = FlowChart( { StartNodes } , { EndNodes } , Description)
    stage = FlowChart({"Production"},{"Calibrate and Balance"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(stage,"Production",,,)
    FlowChartNode(stage,"Calibrate and Balance",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(stage,"Production","Calibrate and Balance",True,,)
    Return(stage)
EndMacro


Macro "Trip Distribution" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Run Trip Distribution"}}
    }
Data:
    In({ Args.[Model Folder] })
    In({ Args.[Output Folder] })
EndMacro


Macro "Mode Choice" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Mode Choice"}}
    }
Data:
    In({ Args.[Model Folder] })
EndMacro


Macro "Time of Day" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Time of Day"}}
    }
Data:
    In({ Args.[Model Folder] })
    In({ Args.[Output Folder] })
EndMacro


Macro "Directionality" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", { /* "Macro Name 1", ..., "Macro Name n" */ }}
    }
Data:
    In({ Args.[Model Folder] })
    In({ Args.[Output Folder] })
EndMacro


Macro "Vehicle Trips" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Vehicle Trips"}}
    }
Data:
    In({ Args.[Output Folder] })
EndMacro


Macro "Copy Files" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Copy Files"}}
    }
Data:
    In({ Args.[Model Folder] })
    In({ Args.[Output Folder] })
    In({ Args.[Road Line Layer] })
    In({ Args.[Transit Route System] })
EndMacro


Macro "Assignment" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Assignment"}}
    }
Data:
    In({ Args.[Output Folder] })
EndMacro


Macro "Check Convergence" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Update Speeds and Check Convergence"}}
    }
Data:
    In({ Args.[Assignment Convergence PRMSE] })
    In({ Args.[Output Folder] })
EndMacro


Macro "Converged" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", { /* "Macro Name 1", ..., "Macro Name n" */ }}
    }
EndMacro


Macro "Build Networks" (Args,Result)
    Attributes = {
        {"Description", "Stage 1"}
    }
Data:
    In({ Args.[Drive Filter] })
    In({ Args.[Output Folder] })
    In({ Args.[Road Line Layer] })
Body:
    // model = FlowChart( { StartNodes } , { EndNodes } , Description)
    model = FlowChart({"Build Drive Network"},{"Build Nonmotorized Networks"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Build Drive Network",,,)
    FlowChartNode(model,"Build Transit Networks",,,)
    FlowChartNode(model,"Build Nonmotorized Networks",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Build Drive Network","Build Transit Networks",True,,)
    FlowChartLink(model,"Build Transit Networks","Build Nonmotorized Networks",True,,)
    Return(model)
EndMacro

